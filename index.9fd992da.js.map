{"mappings":"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","sources":["<anon>","src/index.js","src/js/algorythms.js","src/js/draw.js","src/js/config.js"],"sourcesContent":["// if memory has available space for this process, then we place this proces into the queue\nfunction $8b55f36c1268edb8$var$useFreeMemory(mem, queue, proc) {\n    const freeSpaceIndex = mem.indexOf(null);\n    if (freeSpaceIndex !== -1) {\n        queue.push(proc);\n        mem[freeSpaceIndex] = proc;\n        return true;\n    }\n    return false;\n}\nfunction $8b55f36c1268edb8$var$checkIfMemoryHasProcess(mem, proc) {\n    return mem.indexOf(proc) === -1;\n}\nfunction $8b55f36c1268edb8$export$2b91d3689f613272(proc, mem, queue, seq, index) {\n    if (!$8b55f36c1268edb8$var$checkIfMemoryHasProcess(mem, proc) || $8b55f36c1268edb8$var$useFreeMemory(mem, queue, proc)) return;\n    // replacement\n    const arr = [];\n    let lastIndex = 0;\n    for(let i = index; i < seq.length; i++){\n        if (seq[i] !== proc && mem.findIndex((el)=>el === seq[i]) !== -1 && arr.findIndex((el)=>el === seq[i]) === -1) arr.push(seq[i]);\n        if (arr.length === mem.length) {\n            lastIndex = mem.findIndex((el)=>el === arr[arr.length - 1]);\n            break;\n        }\n    }\n    if (arr.length === mem.length) {\n        mem[lastIndex] = proc;\n        return;\n    }\n    let i = mem.findIndex((el)=>mem.filter((el)=>arr.findIndex((e)=>el === e) === -1)[0] === el);\n    mem[i] = proc;\n}\nfunction $8b55f36c1268edb8$export$64e09406e6c5de88(proc, mem, queue) {\n    // if memory has such process, then do nothing\n    let procIndex = queue.findIndex((el)=>proc === el);\n    if (procIndex !== -1) {\n        queue.splice(procIndex, 1);\n        queue.push(proc);\n        return;\n    }\n    if ($8b55f36c1268edb8$var$useFreeMemory(mem, queue, proc)) return;\n    // replacement\n    const replaceElementIndex = mem.indexOf(queue[0]);\n    mem[replaceElementIndex] = proc;\n    queue.shift();\n    queue.push(proc);\n}\nfunction $8b55f36c1268edb8$export$2c743a0521dd2416(proc, mem, queue) {\n    if (!$8b55f36c1268edb8$var$checkIfMemoryHasProcess(mem, proc) || $8b55f36c1268edb8$var$useFreeMemory(mem, queue, proc)) return;\n    // replacement\n    const replaceElementIndex = mem.indexOf(queue[0]);\n    mem[replaceElementIndex] = proc;\n    queue.shift();\n    queue.push(proc);\n}\n\n\nconst $ba30e20475feac5a$export$e506a1d27d1eaa20 = {\n    form: undefined,\n    output: undefined,\n    outputSeq: undefined,\n    pageData: undefined,\n    aboutAlgTitle: undefined,\n    aboutAlgTitleSpan: undefined,\n    aboutAlgorythmBoxes: undefined,\n    boutAlgorythmTitleIndicator: undefined,\n    lastSeq: [],\n    pageFault: 0\n};\n\n\nfunction $32418162e16c2277$export$d30193cae89bc55c(mem) {\n    const div = document.createElement(\"tr\");\n    div.innerHTML = mem.map((element)=>{\n        let isOld = (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).lastSeq.findIndex((e)=>e === element) !== -1;\n        if (element === null) {\n            element = \"\";\n            isOld = true;\n        }\n        if (!isOld) (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).pageFault++;\n        return `<td class=\"${isOld ? \"\" : \"isOld\"}\">${element}</td>`;\n    }).join(\"\");\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).output.append(div);\n}\nfunction $32418162e16c2277$export$22291718d131d5a1(seq) {\n    seq.forEach((element)=>{\n        const div = document.createElement(\"tr\");\n        div.innerHTML = `<td>${element}</td>`;\n        (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).outputSeq.append(div);\n    });\n}\n\n\n\nfunction $35da740d59af89ba$var$getAlgor(alg) {\n    switch(alg){\n        case \"fifo\":\n            return 0, $8b55f36c1268edb8$export$2c743a0521dd2416;\n        case \"lru\":\n            return 0, $8b55f36c1268edb8$export$64e09406e6c5de88;\n        case \"opt\":\n            return 0, $8b55f36c1268edb8$export$2b91d3689f613272;\n    }\n    return undefined;\n}\nfunction $35da740d59af89ba$var$resetVisualization() {\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).pageFault = 0;\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).pageData.innerText = (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).pageFault;\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).output.innerHTML = \"\";\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).outputSeq.innerHTML = \"\";\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).lastSeq = [];\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).boutAlgorythmTitleIndicator.classList.remove(\"active\");\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).aboutAlgorythmBoxes.forEach((e)=>e.classList.remove(\"active\"));\n}\nfunction $35da740d59af89ba$var$validateAndReturnData(dataToValidate) {\n    const { algorythm: algorythm, memorySize: memorySize, sequence: sequence } = dataToValidate;\n    const validatedAlgorythm = $35da740d59af89ba$var$getAlgor(algorythm);\n    const validatedMemorySize = +memorySize;\n    let validatedSequence;\n    if (!validatedAlgorythm) return {\n        message: `Invalid algorithm value: ${algorythm}`\n    };\n    if (isNaN(validatedMemorySize)) return {\n        message: `Invalid memory size value: ${memorySize}`\n    };\n    const problemIndex = sequence.findIndex((e)=>isNaN(+e));\n    if (problemIndex !== -1) return {\n        message: `Invalid sequence value: ${sequence}:${problemIndex} -> ${sequence.find((_, index)=>index === problemIndex)}`\n    };\n    validatedSequence = sequence.map((e)=>+e);\n    return {\n        validatedAlgorythm: validatedAlgorythm,\n        validatedMemorySize: validatedMemorySize,\n        validatedSequence: validatedSequence\n    };\n}\nfunction $35da740d59af89ba$var$visualize() {\n    const algorythm = (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).form.alg.value.toLowerCase().trim();\n    const memorySize = (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).form.mem.value.toLowerCase().trim();\n    const sequence = (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).form.input.value.trim().split(\" \");\n    const { validatedAlgorythm: validatedAlgorythm, validatedMemorySize: validatedMemorySize, validatedSequence: validatedSequence, message: message } = $35da740d59af89ba$var$validateAndReturnData({\n        algorythm: algorythm,\n        memorySize: memorySize,\n        sequence: sequence\n    });\n    if (message !== undefined) {\n        toastr.error(message);\n        return;\n    }\n    $35da740d59af89ba$var$resetVisualization();\n    const mem = Array(validatedMemorySize).fill(null);\n    const queue = [];\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).aboutAlgTitleSpan.innerText = algorythm.toUpperCase();\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).aboutAlgorythmBoxes.forEach((e)=>{\n        if (e.dataset.alg === algorythm) e.classList.add(\"active\");\n        else e.classList.remove(\"active\");\n    });\n    (0, $32418162e16c2277$export$22291718d131d5a1)(validatedSequence);\n    for(let i = 0; i < validatedSequence.length; i++){\n        validatedAlgorythm(+validatedSequence[i], mem, queue, validatedSequence, i);\n        (0, $32418162e16c2277$export$d30193cae89bc55c)(mem);\n        (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).lastSeq = algorythm !== \"opt\" ? [\n            ...queue\n        ] : [\n            ...mem\n        ];\n    }\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).pageData.innerText = (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).pageFault;\n}\nwindow.addEventListener(\"load\", ()=>{\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).form = document.querySelector(\".form\");\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).output = document.querySelector(\".output\");\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).pageData = document.querySelector(\".stron-data\");\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).outputSeq = document.querySelector(\".output-seq\");\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).aboutAlgTitle = document.querySelector(\".about-algorythm-title\");\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).aboutAlgTitleSpan = document.querySelector(\".about-algorythm-title-span\");\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).aboutAlgorythmBoxes = document.querySelectorAll(\".about-algorythm-box\");\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).boutAlgorythmTitleIndicator = document.querySelector(\".about-algorythm-title-indicator\");\n    $35da740d59af89ba$var$visualize();\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).form.addEventListener(\"submit\", (e)=>{\n        e.preventDefault();\n        $35da740d59af89ba$var$visualize();\n    });\n    (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).aboutAlgTitle.addEventListener(\"click\", (e)=>{\n        (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).boutAlgorythmTitleIndicator.classList.toggle(\"active\");\n        (0, $ba30e20475feac5a$export$e506a1d27d1eaa20).aboutAlgorythmBoxes.forEach((e)=>{\n            if (e.classList.contains(\"active\")) e.classList.toggle(\"visible\");\n            else e.classList.remove(\"visible\");\n        });\n    });\n});\n\n\n//# sourceMappingURL=index.9fd992da.js.map\n","import { fifo, lru, opt } from \"./js/algorythms\";\r\nimport { drawOuputSeq, drawMem } from \"./js/draw\";\r\nimport { config } from \"./js/config\";\r\n\r\nfunction getAlgor(alg) {\r\n  switch (alg) {\r\n    case \"fifo\":\r\n      return fifo;\r\n    case \"lru\":\r\n      return lru;\r\n    case \"opt\":\r\n      return opt;\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction resetVisualization() {\r\n  config.pageFault = 0;\r\n  config.pageData.innerText = config.pageFault;\r\n  config.output.innerHTML = \"\";\r\n  config.outputSeq.innerHTML = \"\";\r\n  config.lastSeq = [];\r\n  config.boutAlgorythmTitleIndicator.classList.remove(\"active\");\r\n  config.aboutAlgorythmBoxes.forEach((e) => e.classList.remove(\"active\"));\r\n}\r\n\r\nfunction validateAndReturnData(dataToValidate) {\r\n  const { algorythm, memorySize, sequence } = dataToValidate;\r\n\r\n  const validatedAlgorythm = getAlgor(algorythm);\r\n  const validatedMemorySize = +memorySize;\r\n  let validatedSequence;\r\n\r\n  if (!validatedAlgorythm) {\r\n    return {\r\n      message: `Invalid algorithm value: ${algorythm}`,\r\n    };\r\n  }\r\n\r\n  if (isNaN(validatedMemorySize)) {\r\n    return {\r\n      message: `Invalid memory size value: ${memorySize}`,\r\n    };\r\n  }\r\n\r\n  const problemIndex = sequence.findIndex((e) => isNaN(+e));\r\n  if (problemIndex !== -1) {\r\n    return {\r\n      message: `Invalid sequence value: ${sequence}:${problemIndex} -> ${sequence.find(\r\n        (_, index) => index === problemIndex\r\n      )}`,\r\n    };\r\n  }\r\n\r\n  validatedSequence = sequence.map((e) => +e);\r\n\r\n  return {\r\n    validatedAlgorythm,\r\n    validatedMemorySize,\r\n    validatedSequence,\r\n  };\r\n}\r\n\r\nfunction visualize() {\r\n  const algorythm = config.form.alg.value.toLowerCase().trim();\r\n  const memorySize = config.form.mem.value.toLowerCase().trim();\r\n  const sequence = config.form.input.value.trim().split(\" \");\r\n\r\n  const {\r\n    validatedAlgorythm,\r\n    validatedMemorySize,\r\n    validatedSequence,\r\n    message,\r\n  } = validateAndReturnData({ algorythm, memorySize, sequence });\r\n\r\n  if (message !== undefined) {\r\n    toastr.error(message);\r\n    return;\r\n  }\r\n\r\n  resetVisualization();\r\n\r\n  const mem = Array(validatedMemorySize).fill(null);\r\n  const queue = [];\r\n\r\n  config.aboutAlgTitleSpan.innerText = algorythm.toUpperCase();\r\n  config.aboutAlgorythmBoxes.forEach((e) => {\r\n    if (e.dataset.alg === algorythm) {\r\n      e.classList.add(\"active\");\r\n    } else {\r\n      e.classList.remove(\"active\");\r\n    }\r\n  });\r\n\r\n  drawOuputSeq(validatedSequence);\r\n\r\n  for (let i = 0; i < validatedSequence.length; i++) {\r\n    validatedAlgorythm(+validatedSequence[i], mem, queue, validatedSequence, i);\r\n\r\n    drawMem(mem);\r\n    config.lastSeq = algorythm !== \"opt\" ? [...queue] : [...mem];\r\n  }\r\n\r\n  config.pageData.innerText = config.pageFault;\r\n}\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n  config.form = document.querySelector(\".form\");\r\n  config.output = document.querySelector(\".output\");\r\n  config.pageData = document.querySelector(\".stron-data\");\r\n  config.outputSeq = document.querySelector(\".output-seq\");\r\n  config.aboutAlgTitle = document.querySelector(\".about-algorythm-title\");\r\n  config.aboutAlgTitleSpan = document.querySelector(\r\n    \".about-algorythm-title-span\"\r\n  );\r\n  config.aboutAlgorythmBoxes = document.querySelectorAll(\r\n    \".about-algorythm-box\"\r\n  );\r\n  config.boutAlgorythmTitleIndicator = document.querySelector(\r\n    \".about-algorythm-title-indicator\"\r\n  );\r\n\r\n  visualize();\r\n\r\n  config.form.addEventListener(\"submit\", (e) => {\r\n    e.preventDefault();\r\n    visualize();\r\n  });\r\n\r\n  config.aboutAlgTitle.addEventListener(\"click\", (e) => {\r\n    config.boutAlgorythmTitleIndicator.classList.toggle(\"active\");\r\n    config.aboutAlgorythmBoxes.forEach((e) => {\r\n      if (e.classList.contains(\"active\")) {\r\n        e.classList.toggle(\"visible\");\r\n      } else {\r\n        e.classList.remove(\"visible\");\r\n      }\r\n    });\r\n  });\r\n});\r\n","// if memory has available space for this process, then we place this proces into the queue\r\nfunction useFreeMemory(mem, queue, proc) {\r\n  const freeSpaceIndex = mem.indexOf(null);\r\n\r\n  if (freeSpaceIndex !== -1) {\r\n    queue.push(proc);\r\n    mem[freeSpaceIndex] = proc;\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction checkIfMemoryHasProcess(mem, proc) {\r\n  return mem.indexOf(proc) === -1;\r\n}\r\n\r\nexport function opt(proc, mem, queue, seq, index) {\r\n  if (!checkIfMemoryHasProcess(mem, proc) || useFreeMemory(mem, queue, proc))\r\n    return;\r\n\r\n  // replacement\r\n  const arr = [];\r\n  let lastIndex = 0;\r\n\r\n  for (let i = index; i < seq.length; i++) {\r\n    if (\r\n      seq[i] !== proc &&\r\n      mem.findIndex((el) => el === seq[i]) !== -1 &&\r\n      arr.findIndex((el) => el === seq[i]) === -1\r\n    ) {\r\n      arr.push(seq[i]);\r\n    }\r\n\r\n    if (arr.length === mem.length) {\r\n      lastIndex = mem.findIndex((el) => el === arr[arr.length - 1]);\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (arr.length === mem.length) {\r\n    mem[lastIndex] = proc;\r\n    return;\r\n  }\r\n\r\n  let i = mem.findIndex(\r\n    (el) => mem.filter((el) => arr.findIndex((e) => el === e) === -1)[0] === el\r\n  );\r\n\r\n  mem[i] = proc;\r\n}\r\n\r\nexport function lru(proc, mem, queue) {\r\n  // if memory has such process, then do nothing\r\n  let procIndex = queue.findIndex((el) => proc === el);\r\n\r\n  if (procIndex !== -1) {\r\n    queue.splice(procIndex, 1);\r\n    queue.push(proc);\r\n    return;\r\n  }\r\n\r\n  if (useFreeMemory(mem, queue, proc)) return;\r\n\r\n  // replacement\r\n  const replaceElementIndex = mem.indexOf(queue[0]);\r\n  mem[replaceElementIndex] = proc;\r\n  queue.shift();\r\n  queue.push(proc);\r\n}\r\n\r\nexport function fifo(proc, mem, queue) {\r\n  if (!checkIfMemoryHasProcess(mem, proc) || useFreeMemory(mem, queue, proc))\r\n    return;\r\n\r\n  // replacement\r\n  const replaceElementIndex = mem.indexOf(queue[0]);\r\n  mem[replaceElementIndex] = proc;\r\n  queue.shift();\r\n  queue.push(proc);\r\n}\r\n","import { config } from \"./config\";\r\n\r\nexport function drawMem(mem) {\r\n  const div = document.createElement(\"tr\");\r\n\r\n  div.innerHTML = mem\r\n    .map((element) => {\r\n      let isOld = config.lastSeq.findIndex((e) => e === element) !== -1;\r\n\r\n      if (element === null) {\r\n        element = \"\";\r\n        isOld = true;\r\n      }\r\n\r\n      if (!isOld) config.pageFault++;\r\n\r\n      return `<td class=\"${isOld ? \"\" : \"isOld\"}\">${element}</td>`;\r\n    })\r\n    .join(\"\");\r\n  config.output.append(div);\r\n}\r\n\r\nexport function drawOuputSeq(seq) {\r\n  seq.forEach((element) => {\r\n    const div = document.createElement(\"tr\");\r\n    div.innerHTML = `<td>${element}</td>`;\r\n    config.outputSeq.append(div);\r\n  });\r\n}\r\n","export const config = {\r\n  form: undefined,\r\n  output: undefined,\r\n  outputSeq: undefined,\r\n  pageData: undefined,\r\n  aboutAlgTitle: undefined,\r\n  aboutAlgTitleSpan: undefined,\r\n  aboutAlgorythmBoxes: undefined,\r\n  boutAlgorythmTitleIndicator: undefined,\r\n  lastSeq: [],\r\n  pageFault: 0,\r\n};\r\n"],"names":["$8b55f36c1268edb8$var$useFreeMemory","mem","queue","proc","freeSpaceIndex","indexOf","push","$8b55f36c1268edb8$var$checkIfMemoryHasProcess","$8b55f36c1268edb8$export$2b91d3689f613272","seq","index","arr","lastIndex","i","length","findIndex","el","filter","e","$8b55f36c1268edb8$export$64e09406e6c5de88","procIndex","splice","replaceElementIndex","shift","$8b55f36c1268edb8$export$2c743a0521dd2416","$ba30e20475feac5a$export$e506a1d27d1eaa20","form","undefined","output","outputSeq","pageData","aboutAlgTitle","aboutAlgTitleSpan","aboutAlgorythmBoxes","boutAlgorythmTitleIndicator","lastSeq","pageFault","$35da740d59af89ba$var$visualize","algorythm","alg","value","toLowerCase","trim","validatedAlgorythm","validatedMemorySize","validatedSequence","message","$35da740d59af89ba$var$validateAndReturnData","dataToValidate","memorySize","sequence","$35da740d59af89ba$var$getAlgor","isNaN","problemIndex","find","_","map","input","split","toastr","error","innerText","innerHTML","classList","remove","forEach","Array","fill","toUpperCase","dataset","add","element","div","document","createElement","append","isOld","join","window","addEventListener","querySelector","querySelectorAll","preventDefault","toggle","contains"],"version":3,"file":"index.9fd992da.js.map"}